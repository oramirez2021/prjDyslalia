/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paquete;

import clase.MoverImagen;
import java.awt.Component;
import java.awt.Dimension;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author omar
 */
public class frmAplicativo extends javax.swing.JFrame implements Runnable{
    
//Hilos y variables de Ias para obtener status
    Thread hiloMovimiento;
    int sw_hiloMovimiento = 1;
    //timers de start
    Timer tiempoMario;
 
    //
    int sw=0;
    /**
     * Creates new form frmAplicativo
     */
    
    
    public frmAplicativo() {
        initComponents();
        //Nuevo codigo
        
        //Obtener dimensiones del formulario
       
        
        sw=1;
        //primera imagen
//        String rutaEstatico="/images/estatico.png"; 
//        Imagen imagenEstatico=new Imagen(rutaEstatico,100,100,0,50);
//        pnlEstatico.add(imagenEstatico);
//        pnlEstatico.repaint();
//        //segunda imagen
//        String rutaMovimiento="/images/moviendo.png"; 
//        Imagen imagenMovimiento=new Imagen(rutaMovimiento,100,100,0,0);
//        pnlEstatico.add(imagenMovimiento);
//        pnlEstatico.repaint();
//        
//        //nube
//        String rutaNube="/images/nube.png"; 
//        Imagen imagenNube1=new Imagen(rutaNube,100,50,0,0);
//        pnlEstatico.add(imagenNube1);
//        pnlEstatico.repaint();
        // nube1
        //nube2
          
        
//        Imagen imagenNube2=new Imagen(rutaEstatico,100,50,0,0);
//        pnlEstatico.add(imagenNube2);
//        pnlEstatico.repaint(0,20,70,50,50);
//       pnlNube2.setLocation(100, 50);
        
        
        //nube2
        //nube2
        
        //Iniciando sw del hiloMovimiento
        sw_hiloMovimiento=1;
        //Iniciando hilos
        hiloMovimiento = new Thread(this);
//        hiloMovimiento.start();
         
        //Empezar Timer
        tiempoMario = new Timer(2000, new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    String orden=txtCommando.getText();
                    mueveMario(1, orden);
                }
            });
        tiempoMario.start();
    }
private class Imagen extends javax.swing.JPanel{
    String r="";
    int x;
    int y;
    public Imagen(String ruta, int ancho, int alto, int x, int y){
        this.setSize(ancho,alto);
        this.x=x;
        this.y=y;
        this.r=ruta;

    }
    @Override
    public void paint(Graphics grafico){
        Dimension dimension=getSize();
        
        ImageIcon img=new ImageIcon(getClass().getResource(r));
      grafico.drawImage(img.getImage(),super.getLocation().x,-50,dimension.width,dimension.height,null);
        setOpaque(false);
      super.paintComponent(grafico);
      
    }
}
private void mueveMario(int persona, String comando){
    
    switch (persona) {
        case 1:
            if(comando.equals("izquierda")){
                System.out.println("avanza izq");
//                tiempoMario.stop();
            }
            if(comando.equals("derecha")){
                System.out.println("avanza der");
//                tiempoMario.stop();
            }

    }
    
}
  public void run() {
        Thread ct = Thread.currentThread();
        //Cuerpo de operaciones de hilo para obtener el movimiento del personaje
        while (ct == hiloMovimiento && sw_hiloMovimiento == 1) {
            //Leyendo estados desde los archivos bat
            String orden=txtCommando.getText();
            mueveMario(1,orden);
            sw_hiloMovimiento = 0;
        }
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCommando = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCommando.setDoubleBuffered(true);
        getContentPane().add(txtCommando, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 204, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formPropertyChange

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
     
    }//GEN-LAST:event_formWindowActivated

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
//        pnlEstatico.setSize(super.getWidth()-100,super.getHeight());
    }//GEN-LAST:event_formComponentResized

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
//        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            frmAplicativo    frm=new frmAplicativo();
            frm.setSize(600, 600);
//                MoverImagen ver=new MoverImagen();
                JPanel p=new JPanel();
                p.setSize(500, 500);
                p.setVisible(true);
                
                frm.setVisible(true); 
//                p.add(ver);
//                frm.add(ver);
  
            }
        });
        
    }
@Override
 public Image getIconImage() {
                Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("image/moviendo.png"));
                return retValue;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField txtCommando;
    // End of variables declaration//GEN-END:variables
}
